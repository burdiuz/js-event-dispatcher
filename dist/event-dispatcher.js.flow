/**
 * @flow
 */

declare module '@actualwave/event-dispatcher' {
  declare export type EventObject = {
    type: string;
    data?: mixed;
    stopPropagation?: ?Function;
    stopImmediatePropagation?: ?Function;
  };

  declare export interface IEvent {
    type: string;
    data: mixed;
    defaultPrevented: boolean;
    stopPropagation: ?() => void;
    stopImmediatePropagation: ?() => void;
    toJSON(): EventObject;
    isDefaultPrevented(): boolean;
    preventDefault(): void;
  }

  declare export type EventType = string | EventObject | IEvent;

  declare export type EventListener = (event?: EventObject) => void;

  declare export type EventProcessor = (event: EventObject) => EventObject;

  declare export interface IEventDispatcher {
    addEventListener(eventType: string, listener: EventListener, priority?: number): void;
    hasEventListener(eventType: string): boolean;
    removeEventListener(eventType: string, listener: EventListener): void;
    removeAllEventListeners(eventType: string): void;
    dispatchEvent(event: EventType, data: mixed): void;
  }


  declare export class Event implements IEvent {
    type: string;
    data: mixed;
    defaultPrevented: boolean;
    stopPropagation: ?() => void;
    stopImmediatePropagation: ?() => void;

    constructor(type: string, data: mixed):Event;
    toJSON(): EventObject;
    isDefaultPrevented(): boolean;
    preventDefault():void;
  }

  declare export class EventDispatcher implements IEventDispatcher {
    constructor(eventPreprocessor: ?EventProcessor, noInit: boolean): EventDispatcher;
    initialize(eventPreprocessor: ?EventProcessor):void;
    addEventListener(eventType: string, listener: EventListener, priority?: number):void;
    hasEventListener(eventType: string):boolean;
    removeEventListener(eventType: string, listener: EventListener):void;
    removeAllEventListeners(eventType: string):void;
    dispatchEvent(event: EventType, data: mixed):void;
    static isObject(value: mixed):boolean;
    static getEvent(eventOrType: EventType, optionalData: mixed): EventObject;
    static create(eventPreprocessor: EventProcessor):EventDispatcher;
    static Event: Class<Event>;
  }

  declare export default typeof EventDispatcher;
}
